Progress in science is when researchers gain from the work of others. Thus, we publish in order to collaborate on a grand scale. Producing a manuscript is also a collaborative process: data is often collected by a group, analysis is performed or discussed among multiple researchers, writing and editing a manuscript is a constant discussion among collaborators ending in peer review. Finally, others learn from that research as published methods are critically evaluated and applied to new systems. As scientists, it is our responsibility to make every step in this process as transparent and reproducible as possible.

Literate programming environments like knitr and Rmarkdown paired with content trackers like git make collaborating easier, dissemination of ideas clearer, and reproducibility a cinch. In addition, the connection between manuscript and analysis is tighter thus easing the writing process and preventing errors. To top it off, these tools are simultaneously easier and simpler than conventional word processors while also being more powerful. In this talk, we will explore the advantages of using a literate programming based writing process with git backed content tracking.
